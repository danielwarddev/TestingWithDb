// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestingWithDb.Infrastructure;

#nullable disable

namespace TestingWithDb.Migrations.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("product_pk");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.ProductFavorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("product_favorite_pk");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_favorite_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_product_favorite_user_id");

                    b.ToTable("product_favorite", (string)null);
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.ProductReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("ReviewContent")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("product_review_pk");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_product_review_product_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_product_review_user_id");

                    b.ToTable("product_review", (string)null);
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("user_pk");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.ProductFavorite", b =>
                {
                    b.HasOne("TestingWithDb.Domain.AggregatesModel.Product", "Product")
                        .WithMany("ProductFavorite")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("product_favorite_product_fk");

                    b.HasOne("TestingWithDb.Domain.AggregatesModel.User", "User")
                        .WithMany("ProductFavorite")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("product_favorite_user_fk");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.ProductReview", b =>
                {
                    b.HasOne("TestingWithDb.Domain.AggregatesModel.Product", "Product")
                        .WithMany("ProductReview")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("product_review_product_fk");

                    b.HasOne("TestingWithDb.Domain.AggregatesModel.User", "User")
                        .WithMany("ProductReview")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("product_review_user_fk");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.Product", b =>
                {
                    b.Navigation("ProductFavorite");

                    b.Navigation("ProductReview");
                });

            modelBuilder.Entity("TestingWithDb.Domain.AggregatesModel.User", b =>
                {
                    b.Navigation("ProductFavorite");

                    b.Navigation("ProductReview");
                });
#pragma warning restore 612, 618
        }
    }
}
